@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Models.Enums
@using TheBugTracker.Services.Interfaces
@model IEnumerable<TheBugTracker.Models.Ticket>

@inject UserManager<BTUser> UserManager;
@inject IBTTicketService TicketService;
@inject IBTProjectService ProjectService;
@{
    ViewData["Title"] = "ArchivedTickets";
    BTUser btUser = await UserManager.GetUserAsync(User);
}



<div>

    <div class="card shadow border-0 my-4">
        <div class="card-header bg-secondary bg-gradient text-light py-4">
            <div class="row">
                <div class="col-12 text-center">
                    <h3>Archived Tickets</h3>

                </div>
            </div>
        </div>
        <div class="card-body">

            <table class="table" id="example">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>


                        <th>
                            @Html.DisplayNameFor(model => model.Project)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TicketPriority)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TicketType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TicketStatus)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OwnerUser)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeveloperUser)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.Raw(item.Description)
                            </td>


                            <td>
                                @Html.DisplayFor(modelItem => item.Project.Name)
                            </td>
                            <td>
                                <h4 class="badge bg-warning">@item.TicketPriority!.Name</h4>

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TicketType.Name)
                            </td>
                            <td>
                                @if (item.TicketStatus?.Name == "New")
                                {
                                    <h4 class="badge bg-success">@item.TicketStatus?.Name</h4>
                                }
                                else
                                {
                                    <h4 class="badge bg-primary">@item.TicketStatus?.Name</h4>

                                }

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
                            </td>
                            <td>
                                @* Details - everyone is going to be able to see.
                            Edit - no one can edit from this section
                            Archive&Restore - ADMIN/PM of the project the ticket belongs to. *@

                                <a class="btn btn-sm btn-outline-primary" asp-action="Details" asp-route-id="@item.Id">Details <i class="fs-5 bi-justify"></i></a>
                                @if (User.IsInRole(nameof(Roles.Administrator)) ||
                               await ProjectService.IsAssignedProjectManagerAsync(btUser.Id, item.ProjectId))
                                {

                                    if (item.Archived)
                                    {
                                        <a class="btn btn-sm btn-outline-success" asp-action="Restore" asp-route-id="@item.Id">Restore <i class="bi bi-arrow-counterclockwise"></i></a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-sm btn-outline-danger" asp-action="Archive" asp-route-id="@item.Id">Archive <i class="bi bi-archive"></i></a>
                                    }
                                }

                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>

    </div>
</div>

