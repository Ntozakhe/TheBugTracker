@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Models.Enums
@using TheBugTracker.Services.Interfaces
@model IEnumerable<TheBugTracker.Models.Ticket>

@inject UserManager<BTUser> UserManager;
@inject IBTTicketService TicketService;
@inject IBTProjectService ProjectService;
@{
    ViewData["Title"] = "All Tickets";
    BTUser btUser = await UserManager.GetUserAsync(User);
}
<div class="container">
<h1>All Tickets</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="row">
    <div class="col-md-6">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Created)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Updated)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Archived)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Project)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TicketPriority)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TicketType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TicketStatus)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.OwnerUser)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DeveloperUser)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Created)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Updated)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Archived)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Project.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TicketType.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
                        </td>
                        <td>
                            @* Details - everyone is going to be able to see.
                        Edit - restricted to the DEVELOPER of that ticket/ADMIN/PM for the project.
                        Archive&Restore - ADMIN/PM of the project the ticket belongs to. *@

                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                            @if (User.IsInRole(nameof(Roles.Administrator)) || item.DeveloperUserId == btUser.Id || item.OwnerUserId == btUser.Id || await ProjectService.IsAssignedProjectManagerAsync(btUser.Id, item.ProjectId))
                            {
                                <span>|</span>
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            }
                            @if (User.IsInRole(nameof(Roles.Administrator)) || await ProjectService.IsAssignedProjectManagerAsync(btUser.Id, item.ProjectId))
                            {
                                <span>|</span>
                                if (item.Archived)
                                {
                                    <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                                }
                                else
                                {
                                    <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                                }
                            }

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

</div>