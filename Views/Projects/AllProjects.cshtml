@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Models.Enums
@using TheBugTracker.Services.Interfaces
@model IEnumerable<TheBugTracker.Models.Project>

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService

@{
    ViewData["Title"] = "AllProjects";
    BTUser btUser = await UserManager.GetUserAsync(User);
}

<h1>All Projects</h1>

@if (User.IsInRole(nameof(Roles.Administrator)) || User.IsInRole(nameof(Roles.ProjectManager)))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageFileName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageFileData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageContentType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageFileName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageFileData)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageContentType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectPriority.Name)
                </td>
                <td>
                    @* a project manager will see all projects but they may not be the PM for that particular project, 
                    so they should not have access to an edit/restore/archive if they're not the PM' *@
                    @{
                        bool isProjectPM = (await ProjectService.GetProjectManagerAsync(item.Id))?.Id == btUser.Id;
                        // The current logged in user is the PM for this particular project. 
                    }
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    @if (User.IsInRole(nameof(Roles.Administrator)) || isProjectPM)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        @if (item.Archived == true)
                        {
                            <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                        }
                        else
                        {
                            <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
