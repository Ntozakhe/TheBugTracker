@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Models.Enums
@using TheBugTracker.Services.Interfaces
@model IEnumerable<TheBugTracker.Models.Project>

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService
@inject IBTFileService FileService

@{
    ViewData["Title"] = "Archived Projects";
    BTUser btUser = await UserManager.GetUserAsync(User);
}



<div>

    <div class="card shadow border-0 my-4">
        <div class="card-header bg-secondary bg-gradient text-light py-4">
            <div class="row">
                <div class="col-12 text-center">
                    <h3 class="text-white text-uppercase">Archived Projects</h3>

                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive" style="overflow-y:auto;height:600px;">
                <table class="table table-hover" id="example">
                    <thead class="">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Description)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StartDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EndDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Archived)
                            </th>
                            <th>
                                Project Image
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.Company)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ProjectPriority)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.Raw(item.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StartDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EndDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Archived)
                                </td>

                                <td>
                                    @if (item.ImageFileData != null)
                                    {
                                        <img src="@FileService.ConvertByteArrayToFlie(item.ImageFileData!, item.ImageContentType!)" class="square-img rounded-start" width="100px" />
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Company.Name)
                                </td>
                                <td>
                                    <span class="badge bg-dark">@item.ProjectPriority.Name</span>
                                </td>
                                <td>
                                    @{
                                        bool isProjectPM = (await ProjectService.GetProjectManagerAsync(item.Id))?.Id == btUser.Id;
                                    }
                                    <a asp-action="Details" asp-route-id="@item.Id"><span class="badge bg-info"><i class="bi bi-binoculars"></i> Details</span></a>
                                    @if (User.IsInRole(nameof(Roles.Administrator)) || isProjectPM)
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id"><span class="badge bg-primary"><i class="bi bi-pencil-square"></i> Edit</span></a>
                                        <a asp-action="Restore" asp-route-id="@item.Id"><span class="badge bg-success"><i class="bi bi-arrow-counterclockwise"></i> Restore</span></a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageFileName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageFileData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageContentType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageFileName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageFileData)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageContentType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectPriority.Name)
                </td>
                <td>
                    @{
                        bool isProjectPM = (await ProjectService.GetProjectManagerAsync(item.Id))?.Id == btUser.Id;
                    }
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    @if (User.IsInRole(nameof(Roles.Administrator)) || isProjectPM)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table> *@
